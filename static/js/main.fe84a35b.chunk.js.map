{"version":3,"sources":["pomodoro-timer/PomodoroTimer.module.css","calendar/Calendar.module.css","work-timer/WorkTimer.module.css","clock/Clock.module.css","backdrop/Backdrop.module.css","backdrop/geometry/Node.js","backdrop/geometry/Connection.js","backdrop/geometry/TweenPath.js","backdrop/geometry/Circuit.js","backdrop/Backdrop.js","clock/Clock.js","calendar/Calendar.js","pomodoro-timer/PomodoroTimer.js","work-timer/WorkTimer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Node","position","color","this","x","y","Connection","nodes","node1","node2","configuration","Math","floor","random","v1","v2","dx","dy","TweenPath","path","distance","p1","p2","d","length","shift","sqrt","Circuit","props","state","cache","sparks","connection","tick","delta","setState","map","spark","s","coordinates","connections","calculatePoints","sparkSprite","width","height","speed","gr","PIXI","beginFill","lineStyle","drawCircle","endFill","dimensions","max","generateNodes","c","generateConnections","app","renderer","generateTexture","cacheAsBitmap","draw","g","i","key","texture","window","addEventListener","console","log","ticker","add","clear","forEach","points","moveTo","p","lineTo","xRange","yRange","density","coords","v","some","every","point","includes","push","c2","node","React","Component","withPixiApp","Backdrop","innerWidth","innerHeight","scroll","max_dimension","className","styles","options","backgroundColor","resizeTo","Array","Fragment","drawRect","Clock","now","moment","hours","format","minutes","seconds","ampm","timerID","setInterval","clearInterval","Calendar","dayOfWeek","monthName","month","day","year","augmented-ui","PomodoroTimer","timerState","timer","toggleTimer","bind","timerId","diff","utc","duration","asMilliseconds","spinner","onClick","loader","xmlns","viewBox","cx","cy","r","stroke","countdown","WorkTimer","labelClasses","label","App","noSleepEnable","noSleep","disable","enable","NoSleepJs","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe84a35b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PomodoroTimer\":\"PomodoroTimer_PomodoroTimer__3CM2-\",\"countdown\":\"PomodoroTimer_countdown__3eUch\",\"minutes\":\"PomodoroTimer_minutes__1Efxk\",\"seconds\":\"PomodoroTimer_seconds__37cct\",\"spinner\":\"PomodoroTimer_spinner__sBe0A\",\"loader\":\"PomodoroTimer_loader__3qWbz\",\"preloader\":\"PomodoroTimer_preloader__81buT\",\"paused\":\"PomodoroTimer_paused__2fOLU\",\"running\":\"PomodoroTimer_running__2Dlqi\",\"resting\":\"PomodoroTimer_resting__18HXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__1s_O_\",\"dayOfWeek\":\"Calendar_dayOfWeek__1_mX2\",\"monthName\":\"Calendar_monthName__CDBe_\",\"month\":\"Calendar_month__2eptn\",\"day\":\"Calendar_day__K2Zcl\",\"year\":\"Calendar_year__32HTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkTimer\":\"WorkTimer_WorkTimer__3cu0i\",\"label\":\"WorkTimer_label__1mVAe\",\"running\":\"WorkTimer_running__Kyr7C\",\"countdown\":\"WorkTimer_countdown__bw2mn\",\"hours\":\"WorkTimer_hours__3QlPv\",\"minutes\":\"WorkTimer_minutes__2LXhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Clock\":\"Clock_Clock__1zXaI\",\"hours\":\"Clock_hours__3wjUS\",\"minutes\":\"Clock_minutes__2_J28\",\"seconds\":\"Clock_seconds__2H1fM\",\"ampm\":\"Clock_ampm__3NI_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1YygZ\"};","\r\nclass Node {\r\n    constructor(position, color) {\r\n        this.x = position[0];\r\n        this.y = position[1];\r\n        this.color = color;\r\n    }\r\n}\r\n\r\nexport default Node;\r\n","\r\nclass Connection {\r\n    constructor(nodes, color) {\r\n        this.node1 = nodes[0];\r\n        this.node2 = nodes[1];\r\n        this.color = color;\r\n        this.configuration = Math.floor(Math.random() * 2);\r\n    }\r\n\r\n    calculatePoints() {\r\n        let v1 = this.node1;\r\n        let v2 = this.node2;\r\n        if (v1.x === v2.x || v1.y === v2.y) { // Straight line between two points\r\n            return [\r\n                [v1.x, v1.y],\r\n                [v2.x, v2.y]\r\n            ]\r\n        }\r\n        let dx = v2.x - v1.x;\r\n        let dy = v2.y - v1.y;\r\n        switch (this.configuration) {\r\n            /*      _\r\n                  _|\r\n                 |\r\n             */\r\n            case 0:\r\n                return [\r\n                    [v1.x, v1.y],\r\n                    [v1.x, v1.y + (dy / 2)],\r\n                    [v1.x + (dx / 2), v1.y + (dy / 2)],\r\n                    [v1.x + (dx / 2), v2.y],\r\n                    [v2.x, v2.y]\r\n                ];\r\n            /*\r\n                   _|\r\n                 _|\r\n             */\r\n            case 1:\r\n                return [\r\n                    [v1.x, v1.y],\r\n                    [v1.x + (dx / 2), v1.y],\r\n                    [v1.x + (dx / 2), v1.y + (dy / 2)],\r\n                    [v2.x, v1.y + (dy / 2)],\r\n                    [v2.x, v2.y]\r\n                ];\r\n            default:\r\n                return [\r\n                    [v1.x, v1.y],\r\n                    [v2.x, v2.y]\r\n                ];\r\n        }\r\n    }\r\n}\r\n\r\nexport default Connection;\r\n","/**\r\n * Given a path and a distance along that path, return\r\n * the coordinates of the point at `distance` from the\r\n * beginning of `path`.\r\n *\r\n * @param path\r\n * @param distance\r\n * @return {number[]|null}\r\n */\r\nfunction TweenPath(path, distance) {\r\n    let p1, p2;\r\n    let d = 0;\r\n    while (distance >= d && path.length >= 2) {\r\n        distance -= d;\r\n        p1 = path.shift();\r\n        p2 = path[0];\r\n        d = Math.sqrt((p2[0] - p1[0])**2 + (p2[1] - p1[1])**2);\r\n    }\r\n    if (distance > d) { return null; } // reached end of path\r\n    return [\r\n        p1[0] + (distance/d) * (p2[0] - p1[0]),\r\n        p1[1] + (distance/d) * (p2[1] - p1[1]),\r\n    ];\r\n}\r\n\r\nexport default TweenPath;\r\n","import React from 'react';\r\n\r\nimport Node from \"./Node\";\r\nimport Connection from \"./Connection\";\r\nimport {Sprite, Graphics, withPixiApp} from \"@inlet/react-pixi\";\r\nimport * as PIXI from 'pixi.js';\r\nimport TweenPath from './TweenPath';\r\n\r\nclass Circuit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.speed = 8;\r\n\r\n        // Set up sparkSprite\r\n        let gr = new PIXI.Graphics();\r\n        gr.beginFill(this.props.color);\r\n        gr.lineStyle();\r\n        gr.drawCircle(0, 0, 5);\r\n        gr.endFill();\r\n\r\n        let dimensions = Math.max(this.props.width, this.props.height);\r\n        let nodes = this.generateNodes(dimensions, dimensions).map(c => new Node(c, this.color));\r\n        this.connections = this.generateConnections(nodes).map(c => new Connection(c, this.color));\r\n\r\n        this.sparkSprite = this.props.app.renderer.generateTexture(gr);\r\n    }\r\n\r\n    state = {\r\n        cache: true,\r\n        sparks: [\r\n            {\r\n                connection: 0,\r\n                distance: 0,\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            {\r\n                connection: 1,\r\n                distance: 0,\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            {\r\n                connection: 2,\r\n                distance: 0,\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            {\r\n                connection: 3,\r\n                distance: 0,\r\n                x: 0,\r\n                y: 0\r\n            },\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Graphics cacheAsBitmap={this.state.cache} draw={g => {\r\n                    this.draw(g);\r\n                }} />\r\n                {this.state.sparks.map((spark, i) => (\r\n                    <Sprite key={i} texture={this.sparkSprite} x={spark.x} y={spark.y} />\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n    tick = (delta) => {\r\n        this.setState({\r\n            sparks: this.state.sparks.map(spark => {\r\n                let s = {...spark};\r\n                let coordinates = TweenPath(this.connections[s.connection].calculatePoints(), s.distance);\r\n                if (!coordinates) {\r\n                    // End of path, select a new connection\r\n                    s.connection = Math.floor(Math.random() * this.connections.length);\r\n                    s.distance = 0;\r\n                    coordinates = TweenPath(this.connections[s.connection].calculatePoints(), s.distance);\r\n                }\r\n                s.x = coordinates[0] - (this.sparkSprite.width / 2);\r\n                s.y = coordinates[1] - (this.sparkSprite.height / 2);\r\n                s.distance += (this.speed * delta);\r\n                return s;\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => {\r\n            this.setState({\r\n                cache: false\r\n            });\r\n            let dimensions = Math.max(this.props.width, this.props.height);\r\n            console.log(dimensions);\r\n            let nodes = this.generateNodes(dimensions, dimensions).map(c => new Node(c, this.color));\r\n            this.connections = this.generateConnections(nodes).map(c => new Connection(c, this.color));\r\n            this.setState({\r\n                cache: true\r\n            });\r\n        });\r\n\r\n        this.props.app.ticker.add(this.tick);\r\n    }\r\n\r\n    draw(g) {\r\n        g.clear();\r\n        this.connections.forEach(c => {\r\n            // Glow\r\n            g.lineStyle(8, this.props.color, 0.3);\r\n            let points = c.calculatePoints();\r\n            let node1 = points[0];\r\n            let node2 = points[points.length - 1];\r\n            g.moveTo(...node1);\r\n            points.forEach(p => g.lineTo(...p));\r\n\r\n            // Line\r\n            g.lineStyle(4, this.props.color, 1);\r\n            g.moveTo(...node1);\r\n            points.forEach(p => g.lineTo(...p));\r\n\r\n            // Glow\r\n            g.lineStyle();\r\n            g.beginFill(this.props.color, 0.3);\r\n            g.drawCircle(node1[0], node1[1], 8);\r\n            g.drawCircle(node2[0], node2[1], 8);\r\n            g.endFill();\r\n\r\n            // Node\r\n            g.beginFill(this.props.color, 1);\r\n            g.drawCircle(node1[0], node1[1], 5);\r\n            g.drawCircle(node2[0], node2[1], 5);\r\n            g.endFill();\r\n        })\r\n    }\r\n\r\n    generateNodes(width, height) {\r\n        const xRange = width * 2;\r\n        const yRange = height * 2;\r\n        if (xRange * yRange < this.props.density) {\r\n            return [];\r\n        }\r\n\r\n        let coords = [];\r\n        while (coords.length < this.props.density) {\r\n            let v = [\r\n                Math.floor((Math.random() * xRange - (width / 2)) / 10) * 10,\r\n                Math.floor((Math.random() * yRange - (height / 2)) / 10) * 10\r\n            ];\r\n            if (!coords.some((c) => c.every(point => v.includes(point)))) {\r\n                coords.push(v);\r\n            }\r\n        }\r\n        return coords;\r\n    }\r\n\r\n    generateConnections(nodes) {\r\n        let connections = [];\r\n        if (!nodes.length) {\r\n            return [];\r\n        }\r\n        while (connections.length < (this.props.density / 2)) {\r\n            let c = [\r\n                nodes[Math.floor(Math.random() * nodes.length)],\r\n                nodes[Math.floor(Math.random() * nodes.length)]\r\n            ];\r\n            if (c[0] !== c[1] && !connections.some(c2 => c2.every(node => c.includes(node)))) {\r\n                connections.push(c);\r\n            }\r\n        }\r\n        return connections;\r\n    }\r\n}\r\n\r\nexport default withPixiApp(Circuit);\r\n","import React from 'react';\r\n\r\nimport styles from './Backdrop.module.css'\r\nimport {Stage, Graphics} from \"@inlet/react-pixi\";\r\nimport Circuit from \"./geometry/Circuit\";\r\n\r\nclass Backdrop extends React.Component {\r\n    state = {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        scroll: 0\r\n    }\r\n\r\n    render() {\r\n        let max_dimension = Math.max(this.state.width, this.state.height);\r\n        return (\r\n            <div className={styles.Backdrop}>\r\n                <Stage width={max_dimension} height={max_dimension} options={{\r\n                    backgroundColor: 0x222222,\r\n                    resizeTo: window\r\n                }}>\r\n                    {[...Array(3)].map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <Circuit color={0x84e8ff} density={50} width={max_dimension} height={max_dimension} />\r\n                        <Graphics x={0} y={0} width={max_dimension * 2} height={max_dimension * 2} draw={g => {\r\n                            g.clear();\r\n                            g.beginFill(0x222222, 0.6);\r\n                            g.drawRect(-max_dimension/ 2, -max_dimension/ 2, max_dimension*2, max_dimension*2);\r\n                            g.endFill();\r\n                        }} />\r\n                    </React.Fragment>\r\n                    ))}\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => {\r\n            this.setState({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport styles from './Clock.module.css';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let now = moment();\r\n        this.state = {\r\n            hours: now.format('hh'),\r\n            minutes: now.format('mm'),\r\n            seconds: now.format('ss'),\r\n            ampm: now.format('a'),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        let now = moment();\r\n        this.setState({\r\n            hours: now.format('hh'),\r\n            minutes: now.format('mm'),\r\n            seconds: now.format('ss'),\r\n            ampm: now.format('a'),\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Clock}>\r\n                <span className={styles.hours}>{this.state.hours}</span>\r\n                <span className={styles.minutes}>{this.state.minutes}</span>\r\n                <span className={styles.seconds}>{this.state.seconds}</span>\r\n                <span className={styles.ampm}>{this.state.ampm}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport styles from './Calendar.module.css';\r\n\r\nclass Calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let now = moment();\r\n        this.state = {\r\n            dayOfWeek: now.format('ddd'),\r\n            monthName: now.format('MMM'),\r\n            month: now.format('MM'),\r\n            day: now.format('DD'),\r\n            year: now.format('YYYY')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        let now = moment();\r\n        this.setState({\r\n            dayOfWeek: now.format('ddd'),\r\n            monthName: now.format('MMM'),\r\n            month: now.format('MM'),\r\n            day: now.format('DD'),\r\n            year: now.format('YYYY')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Calendar} augmented-ui=\"tr-clip-y exe\">\r\n                <span className={styles.dayOfWeek}>{this.state.dayOfWeek}</span>\r\n                <span className={styles.monthName}>{this.state.monthName}</span>\r\n                <span className={styles.month}>{this.state.month}</span>\r\n                <span className={styles.day}>{this.state.day}</span>\r\n                <span className={styles.year}>{this.state.year}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport styles from './PomodoroTimer.module.css';\r\n\r\nclass PomodoroTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minutes: '25',\r\n            seconds: '00',\r\n            timerState: 'paused', // paused, running, resting\r\n            timer: null\r\n        }\r\n\r\n        this.toggleTimer = this.toggleTimer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerId = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (this.state.timerState !== 'paused') {\r\n            this.setState({\r\n                timerState: 'paused',\r\n                minutes: '25',\r\n                seconds: '00'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                timerState: 'running',\r\n                timer: moment().add(25, 'minute')\r\n            })\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.timerState !== 'paused') {\r\n            let diff = -moment().diff(this.state.timer);\r\n            if (diff <= 0) {\r\n                if (this.state.timerState === 'running') {\r\n                    this.setState({\r\n                        timerState: 'resting',\r\n                        timer: moment().add(5, 'minute')\r\n                    });\r\n                    diff = moment().diff(this.state.timer);\r\n                } else {\r\n                    this.setState({\r\n                        timerState: 'paused',\r\n                        timer: null,\r\n                        minutes: '25',\r\n                        seconds: '00'\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            let timer = moment.utc(moment.duration(diff).asMilliseconds());\r\n            this.setState({\r\n                minutes: timer.format('mm'),\r\n                seconds: timer.format('ss')\r\n            })\r\n        } else {\r\n            this.setState({\r\n                minutes: '25',\r\n                seconds: '00'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.PomodoroTimer}>\r\n                <div className={styles.spinner + ' ' + styles[this.state.timerState]} onClick={this.toggleTimer}>\r\n                    <svg className={styles.loader} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 340 340\">\r\n                        <circle cx=\"170\" cy=\"170\" r=\"160\" stroke=\"#ddd\"/>\r\n                        <circle cx=\"170\" cy=\"170\" r=\"150\" stroke=\"#ddd\"/>\r\n                        <circle cx=\"170\" cy=\"170\" r=\"140\" stroke=\"#ddd\"/>\r\n                        <circle cx=\"170\" cy=\"170\" r=\"130\" stroke=\"#ddd\"/>\r\n                    </svg>\r\n                </div>\r\n                <div className={styles.countdown}>\r\n                    <div className={styles.minutes}>{this.state.minutes}</div>\r\n                    <div className={styles.seconds}>{this.state.seconds}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PomodoroTimer;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport styles from './WorkTimer.module.css';\r\n\r\nclass WorkTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hours: '00',\r\n            minutes: '00',\r\n            timerState: 'paused', // paused, running\r\n            timer: null\r\n        };\r\n\r\n        this.toggleTimer = this.toggleTimer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerId = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    toggleTimer() {\r\n        if (this.state.timerState !== 'paused') {\r\n            this.setState({\r\n                timerState: 'paused',\r\n                minutes: '00',\r\n                seconds: '00'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                timerState: 'running',\r\n                timer: moment().add(10, 'hour').add(30, 'minute')\r\n            })\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.timerState !== 'paused') {\r\n            let diff = -moment().diff(this.state.timer);\r\n            if (diff <= 0) {\r\n                this.setState({\r\n                    timerState: 'paused',\r\n                    timer: null,\r\n                    hours: '00',\r\n                    minutes: '00'\r\n                });\r\n                return;\r\n            }\r\n            let timer = moment.utc(moment.duration(diff).asMilliseconds());\r\n            this.setState({\r\n                hours: timer.format('hh'),\r\n                minutes: timer.format('mm')\r\n            })\r\n        } else {\r\n            this.setState({\r\n                hours: '10',\r\n                minutes: '30'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let labelClasses = styles.label + ' ' + (styles[this.state.timerState])\r\n        return (\r\n            <div className={styles.WorkTimer} onClick={this.toggleTimer} augmented-ui=\"tl-clip exe\">\r\n                <div className={labelClasses}>\r\n                    Start Work\r\n                </div>\r\n                <div className={styles.countdown}>\r\n                    <div className={styles.hours}>{this.state.hours}</div>\r\n                    <div className={styles.minutes}>{this.state.minutes}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkTimer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'augmented-ui/augmented.css'\r\nimport Backdrop from './backdrop/Backdrop';\r\nimport Clock from \"./clock/Clock\";\r\nimport Calendar from './calendar/Calendar';\r\nimport PomodoroTimer from \"./pomodoro-timer/PomodoroTimer\";\r\nimport WorkTimer from \"./work-timer/WorkTimer\";\r\nimport NoSleepJs from 'nosleep.js';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.noSleep = new NoSleepJs();\r\n    }\r\n\r\n    noSleepEnable = () => {\r\n        console.log('No sleeping');\r\n        this.noSleep.disable();\r\n        this.noSleep.enable();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\" onClick={this.noSleepEnable}>\r\n                <Backdrop/>\r\n                <Clock/>\r\n                <Calendar/>\r\n                <PomodoroTimer/>\r\n                <WorkTimer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}